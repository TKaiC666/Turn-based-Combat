#pragma once
#include"Icons.h"

class Icon_Dogoo : public Icons
{
public:
	void Initialize()
	{

		string pic_temp[8] = {
			"                    ",
			"                    ",
			"  ¢b            ¢b  ",
			"  ¢i¢j  ¢¨¢©  ¢p¢i  ",
			"  ¢e¡¦¢¨¢k¢o¢©¡¥¢e  ",
			"      ¢l    ¢o      ",
			"      ¢ª¢¢¢£¢«      ",
			"        ¢g¢g        ",

		};

		unsigned short temp_bg[8][10] =

		{
			{ BG_LIGHTBLUE ,BG_LIGHTBLUE ,BG_LIGHTBLUE ,BG_LIGHTBLUE ,BG_LIGHTBLUE ,BG_LIGHTBLUE ,BG_LIGHTBLUE ,BG_LIGHTBLUE ,BG_LIGHTBLUE ,BG_LIGHTBLUE },
			{ BG_LIGHTBLUE ,BG_LIGHTBLUE ,BG_LIGHTBLUE ,BG_LIGHTBLUE ,BG_LIGHTBLUE ,BG_LIGHTBLUE ,BG_LIGHTBLUE ,BG_LIGHTBLUE ,BG_LIGHTBLUE ,BG_LIGHTBLUE },
			{ BG_LIGHTBLUE ,BG_LIGHTBLUE ,BG_LIGHTBLUE ,BG_LIGHTBLUE ,BG_LIGHTBLUE ,BG_LIGHTBLUE ,BG_LIGHTBLUE ,BG_LIGHTBLUE ,BG_LIGHTBLUE ,BG_LIGHTBLUE },
			{ BG_LIGHTBLUE ,BG_LIGHTBLUE ,BG_LIGHTBLUE ,BG_LIGHTBLUE ,BG_LIGHTBLUE ,BG_LIGHTBLUE ,BG_LIGHTBLUE ,BG_BLACK ,BG_LIGHTBLUE ,BG_LIGHTBLUE },
			{ BG_LIGHTBLUE ,BG_BLACK ,BG_LIGHTBLUE ,BG_LIGHTBLUE ,BG_BROWN ,BG_YELLOW ,BG_LIGHTBLUE ,BG_LIGHTBLUE ,BG_BLACK ,BG_LIGHTBLUE },
			{ BG_LIGHTBLUE ,BG_LIGHTBLUE ,BG_LIGHTBLUE ,BG_YELLOW ,BG_YELLOW ,BG_YELLOW ,BG_LIGHTBLUE ,BG_LIGHTBLUE ,BG_LIGHTBLUE ,BG_LIGHTBLUE },
			{ BG_LIGHTBLUE ,BG_LIGHTBLUE ,BG_LIGHTBLUE ,BG_LIGHTBLUE ,BG_YELLOW ,BG_YELLOW ,BG_LIGHTBLUE ,BG_LIGHTBLUE ,BG_LIGHTBLUE ,BG_LIGHTBLUE },
			{ BG_LIGHTBLUE ,BG_LIGHTBLUE ,BG_LIGHTBLUE ,BG_LIGHTBLUE ,BG_YELLOW ,BG_YELLOW ,BG_LIGHTBLUE ,BG_LIGHTBLUE ,BG_LIGHTBLUE ,BG_LIGHTBLUE }
		};

		unsigned short background_color_temp[8][20];


		unsigned short temp_color[8][10] =
		{
			{ WORD_BLACK ,WORD_MAGENTA ,WORD_MAGENTA ,WORD_MAGENTA ,WORD_BLACK ,WORD_BLACK ,WORD_BLACK ,WORD_BLACK ,WORD_BLACK ,WORD_BLACK },
			{ WORD_MAGENTA ,WORD_MAGENTA ,WORD_LIGHTGREY ,WORD_MAGENTA ,WORD_MAGENTA ,WORD_MAGENTA ,WORD_MAGENTA ,WORD_MAGENTA ,WORD_BLACK ,WORD_BLACK },
			{ WORD_BLACK ,WORD_BLACK ,WORD_LIGHTGREY ,WORD_LIGHTGREY ,WORD_BLACK ,WORD_RED ,WORD_LIGHTGREY ,WORD_MAGENTA ,WORD_BLACK ,WORD_BLACK },
			{ WORD_BLACK ,WORD_BLACK ,WORD_BLACK ,WORD_LIGHTGREY ,WORD_BROWN ,WORD_BROWN ,WORD_GREEN ,WORD_LIGHTBLUE ,WORD_BLACK ,WORD_BLACK },
			{ WORD_BLACK ,WORD_LIGHTBLUE ,WORD_BLACK ,WORD_YELLOW ,WORD_YELLOW ,WORD_BROWN ,WORD_YELLOW ,WORD_BLACK ,WORD_LIGHTBLUE ,WORD_BLACK },

			{ WORD_LIGHTGREY ,WORD_BLACK ,WORD_BLACK ,WORD_LIGHTBLUE ,WORD_BLACK ,WORD_BLACK ,WORD_YELLOW ,WORD_LIGHTGREEN ,WORD_BLACK ,WORD_BLACK },
			{ WORD_LIGHTGREY ,WORD_BLACK ,WORD_BLACK ,WORD_YELLOW ,WORD_BLACK ,WORD_BLACK ,WORD_YELLOW ,WORD_BLACK ,WORD_BLACK ,WORD_BLACK },
			{ WORD_LIGHTGREY ,WORD_LIGHTGREY ,WORD_LIGHTGREY ,WORD_LIGHTGREY ,WORD_LIGHTBLUE ,WORD_LIGHTBLUE ,WORD_LIGHTGREY ,WORD_BLACK ,WORD_BLACK ,WORD_BLACK }
		};


		unsigned short word_color_temp[8][20];



		for (int i = 0; i < 8; i++)
		{
			for (int j = 0; j < 20; j++)
			{
				background_color_temp[i][j] = temp_bg[i][j / 2];
				word_color_temp[i][j] = temp_color[i][j / 2];
			}
		}

		for (int i = 0; i < 8; i++)
		{
			pic[i] = pic_temp[i];
			for (int j = 0; j < 20; j++)
			{
				background_color[i][j] = background_color_temp[i][j];
				word_color[i][j] = word_color_temp[i][j];
			}

		}
	}
	Icon_Dogoo()
	{
		Initialize();
	}

};